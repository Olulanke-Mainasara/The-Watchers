import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";

import FormThemeToggler from "@/components/UI/Buttons/FormThemeToggler";
// import { auth, db } from "@/firebase/client";
// import { signInWithEmailAndPassword } from "firebase/auth";
// import { doc, getDoc } from "firebase/firestore";
import { useState } from "react";
import { FaArrowLeft } from "react-icons/fa";

import SignupImg from "../public/Auth/signup.webp";

const SignUp = () => {
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [errorMessage, setErrorMessage] = useState(null);
  const router = useRouter();

  const handleSignIn = async (event) => {
    event.preventDefault();
    try {
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const user = userCredential.user;
      const uid = user.uid;

      const userDoc = await getDoc(doc(db, "users", uid));
      if (userDoc.exists()) {
        router.push("/home");
      } else {
        router.push("/sign-up");
      }
    } catch (error) {
      setErrorMessage(error.message);
    }
  };

  return (
    <>
      <Head>
        <title>Sign up - The Watchers.</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-screen min-h-[100dvh] flex relative">
        <form
          className="absolute top-0 z-10 w-full h-full overflow-scroll xl:basis-1/2 backdrop-blur-xl xl:static"
          onSubmit={handleSignIn}
        >
          <div className="flex items-center justify-center w-full min-h-[100dvh]">
            <section className="border border-black bg-white w-[90%] max-w-[450px] flex flex-col gap-5 p-5 pb-6 rounded-xl text-black my-10">
              <div className="flex justify-between">
                <button
                  onClick={(e) => {
                    e.preventDefault();
                    router.back();
                  }}
                  className="flex items-center text-lg gap-2"
                >
                  <FaArrowLeft /> back
                </button>

                <FormThemeToggler />

                <Link
                  href={"/"}
                  className="px-8 py-3 text-white bg-black border border-black rounded-full duration-500 hover:bg-transparent hover:text-black"
                >
                  Home
                </Link>
              </div>

              <h2 className="text-4xl text-center xs:text-2xl">
                Join the Rocket!
              </h2>

              <div className="flex gap-5">
                <label>
                  First name
                  <input
                    type="text"
                    name="firstName"
                    required
                    value={firstName}
                    minLength={3}
                    className="w-full h-12 pl-3 mt-2 text-black bg-transparent border border-black rounded"
                    placeholder="John"
                    onChange={(event) => setFirstName(event.target.value)}
                  />
                </label>

                <label>
                  Last name
                  <input
                    type="text"
                    name="lastName"
                    required
                    value={lastName}
                    minLength={3}
                    className="w-full h-12 pl-3 mt-2 text-black bg-transparent border border-black rounded"
                    placeholder="Doe"
                    onChange={(event) => setLastName(event.target.value)}
                  />
                </label>
              </div>

              <label>
                Email
                <input
                  type="email"
                  placeholder="john.doe@example.com"
                  value={email}
                  required
                  className="w-full h-12 pl-3 mt-2 text-black bg-transparent border border-black rounded"
                  onChange={(event) => setEmail(event.target.value)}
                />
              </label>

              <label>
                Password
                <input
                  type="password"
                  placeholder="**********"
                  value={password}
                  required
                  minLength={8}
                  className="w-full h-12 pl-3 mt-2 text-black bg-transparent border border-black rounded"
                  onChange={(event) => setPassword(event.target.value)}
                />
              </label>

              {errorMessage && <p className="text-red-600">{errorMessage}</p>}

              <p className="text-center xs:text-xs">
                Already have an account?&nbsp;
                <Link className="font-bold" href={"/login"}>
                  Login
                </Link>
              </p>

              <button
                className="py-3 text-white bg-black border rounded-full duration-500 hover:bg-transparent hover:text-black hover:border-black"
                type="submit"
              >
                Continue
              </button>
            </section>
          </div>
        </form>

        <section className="relative xl:basis-1/2 basis-full">
          <Image
            src={SignupImg}
            fill
            sizes="(max-width: 767px) 100vw, (min-width: 768px) 50vw"
            priority
            placeholder="blur"
            alt="Sign-up img"
          />
        </section>
      </main>
    </>
  );
};

export default SignUp;
